[
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "1 Libraries\n\nlibrary(RSQLite)\nlibrary(jsonlite)\nlibrary(tidyverse)\ncon <- dbConnect(drv = SQLite(), dbname = 'C:/Users/sedit/Desktop/SadiR/ss23-bdsb-Sadtom98/content/01_journal/02_data_acquisition_/Chinook_Sqlite.sqlite')\ndbListTables(con)\n\n#>  [1] \"Album\"         \"Artist\"        \"Customer\"      \"Employee\"     \n#>  [5] \"Genre\"         \"Invoice\"       \"InvoiceLine\"   \"MediaType\"    \n#>  [9] \"Playlist\"      \"PlaylistTrack\" \"Track\"\n\ntbl(con, \"Album\")\n\n\n\n  \n\n\nalbum_tbl <- tbl(con, \"Album\") %>% collect()\ndbDisconnect(con)\ncon\n\n#> <SQLiteConnection>\n#>   DISCONNECTED\n\nlibrary(httr)\nlibrary(glue)\nresp <- GET(\"https://swapi.dev/api/people/1/\")\nresp\n\n#> Response [https://swapi.dev/api/people/1/]\n#>   Date: 2023-05-24 03:15\n#>   Status: 200\n#>   Content-Type: application/json\n#>   Size: 647 B\n\n\n\n2 Example\n\nurl <- \"https://en.wikipedia.org/wiki/List_of_S%26P_500_companies\"\n# use that URL to scrape the S&P 500 table using rvest\nlibrary(rvest)\n\nsp_500 <- url %>%\n          # read the HTML from the webpage\n          read_html() %>%\n          # Get the nodes with the id\n          html_nodes(css = \"#constituents\") %>%\n          # html_nodes(xpath = \"//*[@id='constituents']\"\") %>% \n          # Extract the table and turn the list into a tibble\n          html_table() %>% \n          .[[1]] %>% \n          as_tibble()\nbike_data_lst <- fromJSON(\"C:/Users/sedit/Desktop/SadiR/ss23-bdsb-Sadtom98/content/01_journal/02_data_acquisition_/bike_data.json\")"
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "1 Data Science at TUHH ——————————————————\n\n2 SALES ANALYSIS —-\n\n3 1.0 Load libraries —-\n\nlibrary(tidyverse)\n\n\nlibrary(readxl)\n\nlibrary(lubridate)\n\nlibrary(\"writexl\")\n\n#> Warning: package 'writexl' was built under R version 4.2.3\n\n\n\n4 2.0 Importing Files —-\n\nbikes <- read_excel(path = \"C:/Users/sedit/Desktop/SadiR/ss23-bdsb-Sadtom98/content/01_journal/01_tidyverse_files/Bikes/01_bike_sales/01_raw_data/bikes.xlsx\")\n\n\nbikeshops <- read_excel(path = \"C:/Users/sedit/Desktop/SadiR/ss23-bdsb-Sadtom98/content/01_journal/01_tidyverse_files/Bikes/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n\n\norderlines <- read_excel(\"C:/Users/sedit/Desktop/SadiR/ss23-bdsb-Sadtom98/content/01_journal/01_tidyverse_files/Bikes/01_bike_sales/01_raw_data/orderlines.xlsx\")\n\n#> New names:\n#> • `` -> `...1`\n\n\n\n5 3.0 Examining Data —-\n\nglimpse(orderlines)\n\n#> Rows: 15,644\n#> Columns: 7\n#> $ ...1        <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"…\n#> $ order.id    <dbl> 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7…\n#> $ order.line  <dbl> 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2…\n#> $ order.date  <dttm> 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-01-1…\n#> $ customer.id <dbl> 2, 2, 10, 10, 6, 6, 6, 6, 6, 22, 8, 8, 8, 8, 16, 16, 16, 1…\n#> $ product.id  <dbl> 2681, 2411, 2629, 2137, 2367, 1973, 2422, 2655, 2247, 2408…\n#> $ quantity    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1…\n\n\n\n6 4.0 Joining Data —-\n\nbike_orderlines <- left_join(orderlines, bikes, by = c(\"product.id\" = \"bike.id\")) %>% left_join(bikeshops, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n\n7 5.0 Wrangling Data —-\n\nbike_orderlines_wrangled <- bike_orderlines %>%\n  separate(col    = location,\n           into   = c(\"City\", \"State\"), sep = \",\") %>% mutate(total.price = price * quantity) %>%\nset_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\n\n8 6.0 Business Insights —-\n\n9 6.1 Sales by State —-\n\nsales_by_state <- bike_orderlines_wrangled %>%\n \n  # Select columns\n  select(order_date, total_price, State) %>%\n\n  # Add year column\n  mutate(year = year(order_date)) %>%\n \n  # Grouping by year and summarizing sales\n  group_by(State) %>% \n  summarize(sales = sum(total_price)) %>%\n \n  # Optional: Add a column that turns the numbers into a currency format \n  # (makes it in the plot optically more appealing)\n  # mutate(sales_text = scales::dollar(sales)) <- Works for dollar values\n  mutate(state_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_state\n\n\n\n  \n\n\n\n\n10 Step 1 - Manipulate\n\n11 Step 2 - Visualize\n\nsales_by_state %>%\nggplot(mapping = aes(x = State, y = sales, fill = State)) +\n\n  # Geometries\n  geom_col() + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n12 6.2 Sales by Year and State —-\n\n13 Step 1 - Manipulate\n\nsales_by_year_state <- bike_orderlines_wrangled %>%\n \n  # Select columns\n  select(order_date, total_price, State) %>%\n\n  # Add year column\n  mutate(year = year(order_date)) %>%\n \n  # Grouping by year and summarizing sales\n  group_by(year, State) %>% \n  summarize(sales = sum(total_price)) %>%\n \n  # Optional: Add a column that turns the numbers into a currency format \n  # (makes it in the plot optically more appealing)\n  # mutate(sales_text = scales::dollar(sales)) <- Works for dollar values\n  mutate(state_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\n#> `summarise()` has grouped output by 'year'. You can override using the\n#> `.groups` argument.\n\nsales_by_year_state\n\n\n\n  \n\n\n\n\n14 Step 2 - Visualize\n\nsales_by_year_state %>%\n\n  # Set up x, y, fill\n  ggplot(aes(x = year, y = sales, fill = year)) +\n\n  # Geometries\n  geom_col() + # Run up to here to get a stacked bar plot\n\n  # Facet\n  facet_wrap(~ State) +\n\n  # Formatting\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\"))\n\n\n\n\n\n\n\n\n15 7.0 Writing Files —-\n\n16 7.1 Excel —-\n\nwrite_xlsx(bike_orderlines_wrangled, path = \"C:/Users/sedit/Desktop/SadiR/ss23-bdsb-Sadtom98/content/01_journal/01_tidyverse_files/Bikes/01_bike_sales/02_wrangled_data/bike_orderlines.xlsx\")\n\n\n17 7.2 CSV —-\n\nwrite_csv(bike_orderlines_wrangled, file = \"C:/Users/sedit/Desktop/SadiR/ss23-bdsb-Sadtom98/content/01_journal/01_tidyverse_files/Bikes/01_bike_sales/02_wrangled_data/bike_orderlines.csv\")\n\n\n18 7.3 RDS —-\n\nwrite_rds(bike_orderlines_wrangled, file = \"C:/Users/sedit/Desktop/SadiR/ss23-bdsb-Sadtom98/content/01_journal/01_tidyverse_files/Bikes/01_bike_sales/02_wrangled_data/bike_orderlines.rds\")"
  }
]